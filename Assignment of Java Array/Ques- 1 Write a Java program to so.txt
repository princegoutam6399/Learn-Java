// Ques- 1 Write a Java program to sort a numeric array and a string array.

import java.util.Arrays;

class SortNumericArrayAndStringArray {
    public static void main(String[] args) {
        int[] numericArray = {32, 43, 12, 43, 21};
        String[] stringArray = {"People", "Apple", "Orange", "Banana", "Cat"};
		
        Arrays.sort(numericArray);
        System.out.println("Sorted Numeric Array:");
        for (int num : numericArray) {
            System.out.print(num + " ");
        }
        System.out.println();

// Sorting string array
        Arrays.sort(stringArray);
        System.out.println("Sorted String Array:");
        for (String str : stringArray) {
            System.out.print(str + " ");
        }
        System.out.println();
    }
}


// Ques - 2 Write a Java program to sum values of an array

import java.util.Arrays;

class SumValuesofArray{
	public static void main(String[] args){
		int[] arr = {2,3,6,1,6};
		int sum =0;
		
		System.out.println("Original Array: " + Arrays.toString(arr));
		
		for(int i=0;i<arr.length;i++){
		    sum = sum+arr[i];
		}
		System.out.println(sum);
	}
}


// Ques -3 
//*****
//*****
//*****
//*****
//*****
//*****
//*****
//*****

class PrintSquarePatterns {
    public static void main(String[] args) {
        int rows = 8;
		int col = 5;
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < col; j++) {
                System.out.print(" * ");
            }
            System.out.println(); 
        }
    }
}


// Ques - 4 Write a Java program to calculate the average value of array elements.

import java.util.Arrays;

class AverageValueofArray{
	public static void main(String[] args){
		int[] arr = {2, 3, 6, 1, 6};
		int sum =0;
		
		for (int num : arr) {
				sum += num;
			}
		double average = (double) sum / arr.length;
		
		System.out.println("Average value of the array elements: " + average);
	}
}


// Ques - 5 Write a Java program to test if an array contains a specific value.

class ContainsASpecificValue{
	public static void main(String[] args){
		int[] arr = {1, 2, 3, 4, 5};
        int target = 3;
		boolean found =false;
		
		for(int i=0;i<arr.length;i++){
			if(arr[i]==target){
				found= true;
				break;
			}
		}
		if (found) {
            System.out.println("The array contains the value " + target);
        } else {
            System.out.println("The array does not contain the value " + target);
        }
	}
}


// Ques - 6 Write a Java program to find the index of an array element.

import java.util.Arrays;

class FindTheIndexofArray{
	public static void main(String[] args){
		int[] arr={23,45,21,53,87};
		int targetValue = 21;
		int index = -1;
			for(int i=0;i<arr.length;i++){
				if(arr[i]==targetValue){
					index =i;
					break;
				}
			}
			if (index != -1) {
            System.out.println("Index of" + targetValue + " in the array is: " + index);
			} else {
            System.out.println(targetValue + " is not present in the array.");
        }
	}
}

// Ques - 7 Write a Java program to remove a specific element from an array.

import java.util.Arrays;

class RemoveSpecificElement {
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        int removeElement = 3;
        int index = -1;
		
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == removeElement) {
                index = i;
                break;
            }
        }

        if (index != -1) {
            for (int i = index; i < arr.length - 1; i++) {
                arr[i] = arr[i + 1];
            }

            
            int[] result = new int[arr.length - 1];
            System.arraycopy(arr, 0, result, 0, arr.length - 1);

            System.out.println("Original array: " + Arrays.toString(arr));
            System.out.println("Array after removing " + removeElement + ": " + Arrays.toString(result));
        } else {
            System.out.println("The element to remove is not found in the array.");
        }
    }
}




// Ques - 8 Write a Java program to copy an array by iterating the array.

import java.util.Arrays;

class CopyAnArrayByIteratingArray {
    public static int[] copyArray(int[] arr) {
        int[] newArr = new int[arr.length];
        for (int i = 0; i < arr.length; i++) {
            newArr[i] = arr[i];
        }
        return newArr;
    }

    public static void main(String[] args) {
        int[] arr = {34, 23, 54, 87};
        int[] newArr = new int[arr.length];
        
        for (int i = 0; i < arr.length; i++) {
            newArr[i] = arr[i];
        }
        
        System.out.println("Original array: " + Arrays.toString(arr));
        System.out.println("Copied array: " + Arrays.toString(newArr));
    }
}


// Ques - 9 Write a Java program to insert an element (specific position) into an array.

import java.util.Arrays;

public class InsertAnElement{
    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5};
        int element = 10;
        int position = 2; 
        
        System.out.println("Original array: " + Arrays.toString(arr));
        
        int[] result = new int[arr.length + 1];
        
        for (int i = 0; i < position; i++) {
            result[i] = arr[i];
        }
		
        result[position] = element;
        
        for (int i = position; i < arr.length; i++) {
            result[i + 1] = arr[i];
        }
        
        arr = result;
        
        System.out.println("Array after inserting " + element + " at position " + position + ": " + Arrays.toString(arr));
    }

}


// Ques - 10 Write a Java program to find the maximum and minimum value of an array.

import java.util.Arrays;

class MaximumAndMinimumValueofArray{
	public static void main(String[] args){
		int[] arr= {34,21,45,23,90};
		int minValue =arr[0];
		int maxValue =arr[0]; 
		
		for(int i=1;i<arr.length;i++){
			if(arr[i]>maxValue){
				maxValue=arr[i];
			}
			if(arr[i]<minValue){
				minValue=arr[i];
			}
		}
		System.out.println("Maximum value in the array: " + maxValue);
        System.out.println("Minimum value in the array: " + minValue);
	}
}

// Ques - 11 Write a Java program to reverse an array of integer values

import java.util.Arrays;

class ReverseAnArrayofInteger{
	public static void main(String[] args){
		int[] arr = {1, 2, 3, 4, 5};
		for(int i=arr.length-1;i>=0;i--){
			System.out.println("Reverse Array :"+arr[i]);
		}
		
	}
}


// ques -12 Write a Java program to find duplicate values in an array of integer values

import java.util.Arrays;

class FindDuplicateValuesinArray{
	public static void main(String[] args){
		int[] arr = {1,2,2,3,1,3,4,5,6,5};
		for(int i=0;i<arr.length;i++){
			int count = 0;
			for(int j=i+1;j<arr.length;j++){
				if(arr[i]==arr[j]){
					count++;
					arr[j]=-1;
				}
			}
			if((count>0)&&(arr[i]!=-1)){
			System.out.println("Duplicate values :"+arr[i]);
		   }
		}
	}
}


// Ques - 13 Write a Java program to find duplicate values in an array of string values

import java.util.Arrays;

class FindDuplicateValuesInArrayofString {
    public static void main(String[] args) {
        String[] str = {"Ram is a good boy and he is a student"};
        
        String[] words = str[0].split("\\s+");
        
        for (int i = 0; i < words.length; i++) {
            int count = 0;
            for (int j = i + 1; j < words.length; j++) {
                if (words[i].equals(words[j])) {
                    count++;
                    words[j] = "-1"; 
                }
            }
            if (count > 0 && !words[i].equals("-1")) {
                System.out.println("Duplicate Value: " + words[i]);
            }
        }
    }
}



// Ques - 14 Write a Java program to find common elements between two arrays (string values).

import java.util.Arrays;

class CommonElementsBetweenTwoArrays {
    public static void main(String[] args) {
        String[] arr1 = {"apple", "banana", "orange", "grape", "mango"};
        String[] arr2 = {"banana", "grape", "watermelon", "apple", "kiwi"};

        System.out.println("Common elements between the arrays:");
        for (String element1 : arr1) {
            for (String element2 : arr2) {
                if (element1.equals(element2)) {
                    System.out.println(element1);
                    break;
                }
            }
        }
    }
}


// Ques - 15 Write a Java program to find common elements between two integer arrays.

import java.util.Arrays;

class CommonElementsBetweenTwoInteger{
	public static void main(String[] args){
		int[] arr1 ={2,3,4,5,6};
		int[] arr2 = {3,4,8,9,2};

			for(int elements1 :arr1){
				for(int elements2 :arr2){
					if(elements1==elements2){
						System.out.println(elements1);
						break;
					}
				}
			}
	}
}


// Ques - 16 Write a Java program to remove duplicate elements from an array.

import java.util.Arrays;

class RemoveDuplicateElements{
	public static void main(String[] args){
		int[] arr = {1,2,3,3,5,3,5,6,7,8,7};
		for(int i=0;i<arr.length;i++){
			for(int j=i+1;j<arr.length;j++){
				if((arr[i]==arr[j]) && (arr[i]!=-1)){
					arr[j]=-1;
				}
			}
		}
		for(int i=0;i<arr.length;i++){
			if(arr[i]!=-1){
				System.out.println(arr[i]);
			}
		}
	}
}


// Ques-17 Write a Java program to find the second largest element in an array.

import java.util.Arrays;

class SecondLargestValueInArray{
	public static void main(String[] args){
		int[] arr ={23,65,34,21,98,67};
			for(int i=0;i<arr.length;i++){
				for(int j=0;j<arr.length-1;j++){
					if(arr[j]<arr[j+1]){
						int temp = arr[j];
						arr[j]=arr[j+1];
						arr[j+1]=temp;
					}
				}
			}
			System.out.println("Second Largest Number Is :"+arr[1]);
	}
}


// Ques - 18 18. Write a Java program to find the second smallest element in an array.

import java.util.Arrays;

class SecondSmallestElement{
	public static void main(String[] args){
		int[] arr={34,56,21,89,42};
			for(int i=0;i<arr.length;i++){
				for(int j=0;j<arr.length-1;j++){
					if(arr[j]>arr[j+1]){
						int temp = arr[j];
						arr[j]=arr[j+1];
						arr[j+1]=temp;
					}
				}
			}
			System.out.println("Second Smallest Number Is :"+arr[1]);
	}
}



// Ques - 20 Write a Java program to convert an array to an ArrayList.

import java.util.Arrays;
import java.util.ArrayList;

class ConvertAnArrayToAnArrayList{
	public static void main(String[] args){
		String[] array = {"apple", "banana", "orange", "grape", "mango"};

			ArrayList<String> arrayList = new ArrayList<>(Arrays.asList(array));
			
			System.out.println("ArrayList elements:");
				for (String element : arrayList) {
            System.out.println(element);
        }
	}
}


// Ques - 21 Write a Java program to convert an ArrayList to an array.

import java.util.Arrays;
import java.util.ArrayList;

class ConvertAnArrayListToAnArray{
	public static void main(String[] args){
		ArrayList<String> arrayList = new ArrayList<>();
        arrayList.add("apple");
        arrayList.add("banana");
        arrayList.add("orange");
        arrayList.add("grape");
        arrayList.add("mango");
		
		String[] array= new String[arrayList.size()];
		arrayList.toArray(array);
		
		System.out.println("Array elements:");
        System.out.println(Arrays.toString(array));
	}
}

// Ques - 23 Write a Java program to test two arrays' equality

import java.util.Arrays;

class TestTwoArraysEquality{
	public static void main(String[] args){
		int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {1, 2, 3, 4, 5};
		
		System.out.println("My arr is :"+Arrays.toString(arr1));
		System.out.println("My arr is :"+Arrays.toString(arr2));
		
		if(Arrays.equals(arr1,arr2)){
			System.out.println("Arrays Are Equal");
		}else{
			System.out.println("Arrays Are Not Equal");
		}
	}
}

// Ques -24 Write a Java program to find a missing number in an array.

import java.util.Arrays;

class MissingNumberAnArray{
	public static void main(String[] args){
		int[] arr = {1, 2, 4, 5, 6};
		int n = arr.length+1;
		int totalSum = n*(n+1)/2;
		int actualSum = 0;
		
		for(int num : arr ){
			actualSum=actualSum+num;
		}
		int missingNumber = totalSum-actualSum;
		System.out.println("Missing Number Is :"+missingNumber);
	}
}


// Ques - 26 Write a Java program to move all 0's to the end of an array. Maintain the relative order of the other (non-zero) array elements.

import java.util.Arrays;

class NonZeroArrayElements {
    public static void moveZeros(int[] arr) {
        int index = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] != 0) {
                arr[index++] = arr[i];
            }
        }
        while (index < arr.length) {
            arr[index++] = 0;
        }
    }

    public static void main(String[] args) {
        int[] arr = {0, 2, 4, 3, 0, 5, 0, 8, 0, 9};
        System.out.println("Original array: " + Arrays.toString(arr));
        
        moveZeros(arr);
        
        System.out.println("Array after moving zeros to end: " + Arrays.toString(arr));
    }
}




// Ques - 27 Write a Java program to find the number of even and odd integers in a given array of integers.

import java.util.Arrays;

class EvenAndOddIntegers{
	public static void main(String[] args){
		int[] arr = {2, 3, 4, 5, 6, 7, 8, 9, 10};
		int even=0;
		int odd=0;
		
		for(int i=0;i<arr.length;i++){
			if(arr[i]%2==0){
				even++;
			}else{
				odd++;
			}
		}
		System.out.println("Number of even integers: " + even);
        System.out.println("Number of odd integers: " + odd);
	}
}



// Ques - 28 Write a Java program to get the difference between the largest and smallest values in an array of integers. The array must have a length of at least 1.

class DifferenceBetweenTheLargestAndSmallestValuesInArray {
    public static void main(String[] args) {
        int[] arr = {1, 5, 8, 2};

        if (arr.length < 1) {
            System.out.println("Array must have a length of at least 1");
            return; 
        }

        int min = arr[0];
        int max = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < min) {
                min = arr[i];
            } else if (arr[i] > max) {
                max = arr[i];
            }
        }
        
        int difference = max - min;
        System.out.println("Difference between the largest and smallest values: " + difference);
    }
}


//Q29:- Write a Java program to compute the average value of an array of integers except the largest and smallest values


class LargestAndSmallestValues{
	public static void main(String[] args){
		int[] arr = {2,4,6,6,3,1,5,7,9,5};
		int max = arr[0];
		int min = arr[0];
		System.out.print("Array : ");
		for(int i=0;i<arr.length;i++)
			System.out.print(arr[i]+" ");
		for(int i=0;i<arr.length;i++)
		{
			if(max<arr[i])
				max=arr[i];
			if(min>arr[i])
				min=arr[i];
		}
		int sum=0;
		for(int i=0;i<arr.length;i++)
			if((arr[i]!=min)&&(arr[i]!=max))
				sum=sum+arr[i];
		float avg = (float)sum/(arr.length-2);
		System.out.println("\nMinimum : "+min);
		System.out.println("Maximum : "+max);
		System.out.println("Excepts Minimum and Maximum Value Average : "+avg);
	}
}


// Ques - 31 Write a Java program to check if the sum of all the 10's in the array is exactly 30. Return false if the condition does not satisfy, otherwise true.

class SumOfAll {
    public static void main(String[] args) {
        int[] arr = {10, 20, 10, 30, 10, 40, 10, 50};
        int sum = 0;
        
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == 10) {
                sum = sum + arr[i];
            }
        }
        
        System.out.println("Is the sum of all 10's exactly 30? " + (sum == 30));
    }
}


// Ques - 32 Write a Java program to check if an array of integers contains two specified elements 65 and 77.

class SpecifiedElements{
	public static void main(String[] args){
		int[] arr = {10, 20, 30, 65, 40, 77, 50};
		boolean num1=false;
		boolean num2=false;
		
		for(int i=0;i<arr.length;i++){
			if(arr[i]==65){
				num1=true;
			}
			if(arr[i]==77){
				num2=true;
			}
		}
		System.out.println("array contain both 65 and 77? " + (num1 && num2));
	}
}

// Que - 33 Write a Java program to remove duplicate elements from a given array and return the updated array length.

import java.util.Arrays;

class RemoveDuplicateEelements{
	public static void main(String[] args){
		int[] arr = {1, 2, 3, 3, 4, 5, 6, 6, 7};
		Arrays.sort(arr);
		
		int[] newArr= new int[arr.length];
		int j=0;
		
		for(int i=0;i<arr.length;i++){
			if(i==0 ||arr[i]!= arr[i-1]){
				newArr[j++]= arr[i];
			}
		}
		for(int i=0;i<j;i++){
			System.out.println(newArr[i]);
		}
	}
}



//34. Write a Java program to find the length of the longest consecutive elements sequence from an unsorted array of integers. 

class LongestConsecutiveElementsSequence{
	public static void main(String[] args){
		int[] arr={49, 1, 3, 200, 2, 4, 70, 50};
		int high=0;
		for(int i=0;i<arr.length;i++){
			int temp=1;
			int count=1;
			for(int j=0;j<arr.length;j++){
				if(arr[j]==(arr[i]+count)){
					temp++;
					count++;
					j=0;
				}
			}
			if(high<temp){
				high=temp;
			}			
		}
	  System.out.println("Longest Consicutive :"+high);
    }
}


//35. Write a Java program to find the sum of the two elements of a given array equal to a given integer.

import java.util.Scanner;

class SumOfTheTwoElements{
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int[] arr = {1,2,3,4,5,6};
		System.out.print("My Array : ");
		for(int i=0;i<arr.length;i++)
			System.out.print(arr[i]+" ");
		System.out.print("\nEnter A Number : ");
		int num = sc.nextInt();
		int flag=0;
		for(int i=0;i<arr.length;i++){
			for(int j=i+1;j<arr.length;j++){
				if((arr[i]+arr[j])==num){
					System.out.println("1st Value : "+arr[i]);
					System.out.println("2nd Value : "+arr[j]);
					flag=1;
				}
				if(flag==1)
					break;
			}
		}
		if(flag==0)
			System.out.println("Combination Not Found!");
	}
}


// Ques - 38 38. Write a Java program to get the majority element from an array of integers containing duplicates. 

class MajorityElement {
    public static void main(String[] args) {
        int[] arr = {3, 3, 4, 2, 4, 4, 2, 4, 4};
        int candidate = arr[0];
        int count = 0;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == candidate) {
                count++;
            } else {
                count--;
            }

            if (count == 0) {
                candidate = arr[i];
                count = 1;
            }
        }

        count = 0;
        for (int num : arr) {
            if (num == candidate) { 
                count++;
            }
        }

        if (count > arr.length / 2) {
            System.out.println("The majority element is: " + candidate);
        } else {
            System.out.println("No majority element found.");
        }
    }
}



// Ques - 41 Write a Java program to find the smallest and second smallest elements of a given array.


class SmallestAndSecondSmallest{
	public static void main(String[] args){
		int[] arr={34,21,54,69,90,32};
		int small =Integer.MAX_VALUE;
		int sSmall =Integer.MAX_VALUE;
		
		for(int i=0;i<arr.length;i++){
			if(arr[i]<small){
				sSmall=small;
				small=arr[i];
			}else if(arr[i]<sSmall & arr[i] !=small){
				sSmall=arr[i];
			}
		}
		if(sSmall == Integer.MAX_VALUE){
			System.out.println("Second smallest element doesn't exist.");
		}else{
			System.out.println("Smallest element: " + small);
            System.out.println("Second smallest element: " + sSmall);
		}
	}
}



// Ques - 42 Write a Java program to separate 0s and 1s in an array of 0s and 1s into left and right sides

import java.util.Arrays;

class LeftAndRightSides{
	public static void main(String[] args){
		int[] arr = {0, 1, 0, 1, 1, 0, 1, 0};
		int left =0;
		int right=arr.length-1;
		
		while(left <right){
			while(left < right && arr[left]==0){
				left++;
			}
			while(left < right && arr[right]==1){
				right--;
			}
			
			if(left <right){
				int temp = arr[left];
				arr[left]= arr[right];
				arr[right]=temp;
				left++;
				right--;
			}
		}
		System.out.println("Separated array: " + Arrays.toString(arr));
	}
}
